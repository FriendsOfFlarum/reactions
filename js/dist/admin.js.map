{"version":3,"sources":["webpack://@reflar/reactions/webpack/bootstrap","webpack://@reflar/reactions/external \"flarum.core.compat['Model']\"","webpack://@reflar/reactions/external \"flarum.core.compat['app']\"","webpack://@reflar/reactions/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@reflar/reactions/external \"flarum.core.compat['extend']\"","webpack://@reflar/reactions/./src/common/util/emoji.js","webpack://@reflar/reactions/external \"flarum.core.compat['components/Alert']\"","webpack://@reflar/reactions/external \"flarum.core.compat['models/Forum']\"","webpack://@reflar/reactions/./src/common/models/Reaction.js","webpack://@reflar/reactions/external \"flarum.core.compat['utils/mixin']\"","webpack://@reflar/reactions/external \"flarum.core.compat['components/Button']\"","webpack://@reflar/reactions/external \"flarum.core.compat['components/Select']\"","webpack://@reflar/reactions/./src/admin/components/SettingsPage.js","webpack://@reflar/reactions/./src/admin/index.js","webpack://@reflar/reactions/./src/admin/addSettingsPage.js","webpack://@reflar/reactions/external \"flarum.core.compat['components/PermissionGrid']\"","webpack://@reflar/reactions/external \"flarum.core.compat['components/AdminNav']\"","webpack://@reflar/reactions/external \"flarum.core.compat['components/AdminLinkButton']\"","webpack://@reflar/reactions/external \"flarum.core.compat['components/Page']\"","webpack://@reflar/reactions/external \"flarum.core.compat['utils/saveSettings']\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_inheritsLoose","subClass","superClass","constructor","__proto__","shortnames","flatten","arr","depth","reduce","a","v","concat","Array","isArray","values","emojis","entries","emojiCache","Map","__webpack_exports__","reactionOrIdentifier","codePoint","identifier","has","includes","emoji","find","_ref","getEmoji","match","input","finalScore","emojiName","forEach","_ref2","e","length","equals","indexF","indexOf","indexS","score","this","split","map","padStart","join","output","uc","String","fromCodePoint","apply","toUnicodeEmoji","url","type","set","Reaction","flarum_utils_mixin__WEBPACK_IMPORTED_MODULE_2___default","flarum_Model__WEBPACK_IMPORTED_MODULE_1___default","attribute","user_id","post_id","SettingsPage_SettingsPage","init","_this","fields","reactions","app","forum","settingsPrefix","settings","data","newReaction","prop","addPrefix","view","_this2","className","onsubmit","translator","trans","style","reaction","spanClass","demos","push","aria-hidden","alt","draggable","src","width","placeholder","oninput","withAttr","updateIdentifier","Select_default","component","options","icon","onchange","updateType","Button_default","onclick","deleteReaction","addReaction","isEnabled","convertToUpvote","convertToDownvote","convertToLike","children","strong","loading","disabled","changed","_this3","some","_this4","request","method","then","response","attributes","id","redraw","reactionToUpdate","reactionToDelete","_this5","splice","_this6","preventDefault","alerts","dismiss","successAlert","saveSettings_default","show","Alert_default","catch","JSON","parse","extensions_enabled","Page_default","external_flarum_core_compat_app_default","initializers","add","store","models","Forum_default","external_flarum_core_compat_Model_default","hasMany","external_flarum_core_compat_extend_","PermissionGrid_default","items","label","permission","routes","path","extensionSettings","route","AdminNav_default","AdminLinkButton_default","href","description"],"mappings":"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","file":"admin.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 29);\n","module.exports = flarum.core.compat['Model'];","module.exports = flarum.core.compat['app'];","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","module.exports = flarum.core.compat['extend'];","import emojis from 'simple-emoji-map';\n\nconst flatten = (arr, depth = 1) => arr.reduce((a, v) => a.concat(depth > 1 && Array.isArray(v) ? flatten(v, depth - 1) : v), []);\nconst shortnames = flatten(Object.values(emojis));\nconst entries = Object.entries(emojis);\nconst getEmoji = identifier => entries.find(([key, value]) => value.includes(identifier));\nconst toUnicodeEmoji = codePoint => String.fromCodePoint(...codePoint.split('-').map(e => `0x${e}`));\n\nexport class Match {\n    /**\n     * Match\n     * Creates a new `Match` instance.\n     *\n     * It contains the following properties:\n     *\n     *  - `input` (String): The input string.\n     *  - `score` (Number): A number between `0` and `1`. The closer to `1` it is, the better match it is.\n     *  - `emoji` (Object): The emoji object.\n     *  - `emoji_name` (String): The emoji name.\n     *\n     * @name Match\n     * @function\n     * @param {String} input The input string (just a word).\n     */\n    constructor(input) {\n        let r = emojis[input],\n            finalScore = -1,\n            emojiName = null;\n        \n        if (r) {\n            finalScore = 1;\n            emojiName = input;\n        } else {\n            Object.entries(emojis).forEach(([n, e]) => {\n                for (let i = 0; i <= e.length; ++i) {\n                    const c = e[i] || n,\n                        equals = c === input,\n                        indexF = c.indexOf(input),\n                        indexS = input.indexOf(c),\n                        score = equals && input.length ? 1 : indexF === 0 || (indexS === 0 && c.length > 1) ? 1 : indexF > 0 || indexS > 0 ? 0 : -1;\n\n                    if (score > finalScore) {\n                        emojiName = n;\n                        finalScore = score;\n                        if (score === 1) {\n                            return false;\n                        }\n                    }\n                }\n            });\n        }\n\n        this.score = finalScore;\n        this.emoji = emojiName;\n    }\n}\nconst emojiCache = new Map();\n\nexport default reactionOrIdentifier => {\n    if (!reactionOrIdentifier) return {};\n\n    const identifier = reactionOrIdentifier.identifier || reactionOrIdentifier;\n    let codePoint;\n\n    if (emojiCache.has(identifier)) return emojiCache.get(identifier);\n\n    if (shortnames.includes(identifier)) {\n        const emoji = getEmoji(identifier);\n        codePoint = emoji && emoji[0];\n    } else {\n        const match = new Match(identifier);\n        if (match.score) codePoint = match.emoji;\n    }\n\n    if (codePoint) {\n        codePoint = codePoint\n            .split('-')\n            .map(s => s.padStart(4, 0))\n            .join('-');\n    }\n\n    const output = codePoint\n        ? {\n              identifier,\n              uc: toUnicodeEmoji(codePoint),\n              url: `https://cdn.jsdelivr.net/emojione/assets/3.1/png/32/${codePoint}.png`,\n              type: 'emoji',\n          }\n        : {};\n\n    emojiCache.set(reactionOrIdentifier, output);\n\n    return output || {};\n};\n","module.exports = flarum.core.compat['components/Alert'];","module.exports = flarum.core.compat['models/Forum'];","import Model from 'flarum/Model';\nimport mixin from 'flarum/utils/mixin';\n\nexport default class Reaction extends mixin(Model, {\n    identifier: Model.attribute('identifier'),\n    type: Model.attribute('type'),\n    user_id: Model.attribute('user_id'),\n    post_id: Model.attribute('post_id'),\n}) {}\n","module.exports = flarum.core.compat['utils/mixin'];","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['components/Select'];","import Alert from 'flarum/components/Alert';\nimport Button from 'flarum/components/Button';\nimport emoji from '../../common/util/emoji';\nimport Page from 'flarum/components/Page';\nimport Select from 'flarum/components/Select';\nimport saveSettings from 'flarum/utils/saveSettings';\n\nexport default class SettingsPage extends Page {\n    init() {\n        this.fields = ['convertToUpvote', 'convertToDownvote', 'convertToLike'];\n\n        this.values = {};\n\n        this.reactions = app.forum.reactions();\n\n        this.settingsPrefix = 'reflar.reactions';\n\n        const settings = app.data.settings;\n\n        this.newReaction = {\n            identifier: m.prop(''),\n            type: m.prop('emoji'),\n        };\n\n        this.fields.forEach(key => (this.values[key] = m.prop(settings[this.addPrefix(key)])));\n    }\n\n    /**\n     * @returns {*}\n     */\n    view() {\n        return (\n            <div className=\"SettingsPage--reactions\">\n                <div className=\"container\">\n                    <form onsubmit={this.onsubmit.bind(this)}>\n                        <fieldset>\n                            <legend>{app.translator.trans('reflar-reactions.admin.page.reactions.title')}</legend>\n                            <label>{app.translator.trans('reflar-reactions.admin.page.reactions.reactions')}</label>\n                            <div style=\"margin-bottom: -10px\" className=\"helpText\">\n                                {app.translator.trans('reflar-reactions.admin.page.reactions.Helptext')}\n                            </div>\n                            <br />\n                            <div className=\"Reactions--Container\">\n                                {this.reactions.map(reaction => {\n                                    const spanClass = reaction.type() === 'icon' && `fa fa-${reaction.identifier()} Reactions-demo`;\n                                    const data = emoji(reaction.identifier());\n                                    const demos = [];\n\n                                    if (reaction.type() === 'icon') {\n                                        demos.push(\n                                            <i className={spanClass} aria-hidden>\n                                                &nbsp;\n                                            </i>\n                                        );\n                                    }\n\n                                    if ((reaction.type === 'emoji' && data.uc) || data.uc) {\n                                        demos.push(\n                                            <img\n                                                alt={reaction.identifier()}\n                                                className=\"Reactions-demo\"\n                                                draggable=\"false\"\n                                                style={reaction.type() !== 'emoji' && 'opacity: 0.5;'}\n                                                src={data.url}\n                                                width=\"30px\"\n                                            />\n                                        );\n                                    }\n\n                                    return [\n                                        <div>\n                                            <input\n                                                className=\"FormControl Reactions-identifier\"\n                                                type=\"text\"\n                                                value={reaction.identifier()}\n                                                placeholder={app.translator.trans('reflar-reactions.admin.page.reactions.help.identifier')}\n                                                oninput={m.withAttr('value', this.updateIdentifier.bind(this, reaction))}\n                                            />\n                                            {Select.component({\n                                                options: { emoji: 'emoji', icon: 'icon' },\n                                                value: reaction.type(),\n                                                onchange: this.updateType.bind(this, reaction),\n                                            })}\n                                            {Button.component({\n                                                type: 'button',\n                                                className: 'Button Button--warning Reactions-button',\n                                                icon: 'fa fa-times',\n                                                onclick: this.deleteReaction.bind(this, reaction),\n                                            })}\n                                            {demos}\n                                        </div>,\n                                    ];\n                                })}\n                                <br />\n                                <div>\n                                    <input\n                                        className=\"FormControl Reactions-identifier\"\n                                        type=\"text\"\n                                        placeholder={app.translator.trans('reflar-reactions.admin.page.reactions.help.identifier')}\n                                        oninput={m.withAttr('value', this.newReaction.identifier)}\n                                    />\n                                    {Select.component({\n                                        options: { emoji: 'emoji', icon: 'icon' },\n                                        value: this.newReaction.type(),\n                                        onchange: this.newReaction.type,\n                                    })}\n                                    {Button.component({\n                                        type: 'button',\n                                        className: 'Button Button--warning Reactions-button',\n                                        icon: 'fa fa-plus',\n                                        onclick: this.addReaction.bind(this),\n                                    })}\n                                    {this.newReaction.type() === 'icon' ? (\n                                        <i\n                                            className={this.newReaction.type() === 'icon' && `fa fa-${this.newReaction.identifier()} Reactions-demo`}\n                                            aria-hidden\n                                        >\n                                            &nbsp;\n                                        </i>\n                                    ) : (\n                                        ''\n                                    )}\n\n                                    {emoji(this.newReaction.identifier()).uc ? (\n                                        <img\n                                            alt={this.newReaction.identifier()}\n                                            className=\"Reactions-demo\"\n                                            draggable=\"false\"\n                                            style={this.newReaction.type() !== 'emoji' && 'opacity: 0.5;'}\n                                            src={emoji(this.newReaction.identifier()).url}\n                                            width=\"30px\"\n                                        />\n                                    ) : (\n                                        ''\n                                    )}\n                                </div>\n                            </div>\n                        </fieldset>\n                        <fieldset>\n                            <div className=\"Reaction-settings\">\n                                {this.isEnabled('reflar-gamification') || this.isEnabled('flarum-likes') ? (\n                                    <legend>{app.translator.trans('reflar-reactions.admin.page.settings.integrations.legend')}</legend>\n                                ) : (\n                                    ''\n                                )}\n                                {this.isEnabled('reflar-gamification') ? (\n                                    <div>\n                                        <legend>\n                                            {app.translator.trans('reflar-reactions.admin.page.settings.integrations.gamification.legend')}\n                                        </legend>\n                                        <label>\n                                            {app.translator.trans('reflar-reactions.admin.page.settings.integrations.gamification.upvoteLabel')}\n                                        </label>\n                                        <div className=\"helpText\">\n                                            {app.translator.trans('reflar-reactions.admin.page.settings.integrations.gamification.upvoteHelptext')}\n                                        </div>\n                                        <input\n                                            className=\"FormControl reactions-settings-input\"\n                                            value={this.values.convertToUpvote() || ''}\n                                            placeholder=\"thumbsup\"\n                                            oninput={m.withAttr('value', this.values.convertToUpvote)}\n                                        />\n                                        <label>\n                                            {app.translator.trans('reflar-reactions.admin.page.settings.integrations.gamification.downvoteLabel')}\n                                        </label>\n                                        <div className=\"helpText\">\n                                            {app.translator.trans('reflar-reactions.admin.page.settings.integrations.gamification.downvoteHelptext')}\n                                        </div>\n                                        <input\n                                            className=\"FormControl reactions-settings-input\"\n                                            value={this.values.convertToDownvote() || ''}\n                                            placeholder=\"thumbsdown\"\n                                            oninput={m.withAttr('value', this.values.convertToDownvote)}\n                                        />\n                                    </div>\n                                ) : (\n                                    ''\n                                )}\n                                {this.isEnabled('flarum-likes') ? (\n                                    <div>\n                                        <legend>{app.translator.trans('reflar-reactions.admin.page.settings.integrations.likes.legend')}</legend>\n                                        <label>{app.translator.trans('reflar-reactions.admin.page.settings.integrations.likes.Label')}</label>\n                                        <div className=\"helpText\">\n                                            {app.translator.trans('reflar-reactions.admin.page.settings.integrations.likes.Helptext')}\n                                        </div>\n                                        <input\n                                            className=\"FormControl reactions-settings-input\"\n                                            value={this.values.convertToLike() || ''}\n                                            placeholder=\"thumbsup\"\n                                            oninput={m.withAttr('value', this.values.convertToLike)}\n                                        />\n                                    </div>\n                                ) : (\n                                    ''\n                                )}\n                            </div>\n                            {this.values.convertToUpvote() && this.values.convertToLike() ? (\n                                <h3 className=\"Reactions-warning\">\n                                    {app.translator.trans('reflar-reactions.admin.page.settings.integrations.warning')}\n                                </h3>\n                            ) : (\n                                ''\n                            )}\n                            {Button.component({\n                                type: 'submit',\n                                className: 'Button Button--primary',\n                                children: app.translator.trans('reflar-reactions.admin.page.settings.save_settings', {\n                                    strong: <strong />,\n                                }),\n                                loading: this.loading,\n                                disabled: !this.changed(),\n                            })}\n                        </fieldset>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n\n    /**\n     * @returns boolean\n     */\n    changed() {\n        var fieldsCheck = this.fields.some(key => this.values[key]() !== app.data.settings[this.addPrefix(key)]);\n        return fieldsCheck;\n    }\n\n    /**\n     *\n     * @param reaction\n     */\n    addReaction(reaction) {\n        app.request({\n            method: 'POST',\n            url: app.forum.attribute('apiUrl') + '/reactions',\n            data: {\n                identifier: this.newReaction.identifier(),\n                type: this.newReaction.type(),\n            },\n        }).then(response => {\n            this.reactions.push({\n                identifier: m.prop(response.data.attributes.identifier),\n                type: m.prop(response.data.attributes.type),\n                id: m.prop(response.data.id),\n            });\n\n            this.newReaction.identifier('');\n            this.newReaction.type('icon');\n            m.redraw();\n        });\n    }\n\n    updateIdentifier(reactionToUpdate, value) {\n        app.request({\n            method: 'PATCH',\n            url: app.forum.attribute('apiUrl') + '/reactions/' + reactionToUpdate.id(),\n            data: {\n                identifier: value,\n            },\n        });\n        this.reactions.some((reaction, i) => {\n            if (reaction.id() === reactionToUpdate.id()) {\n                reaction.identifier = m.prop(value);\n                return true;\n            }\n        });\n    }\n\n    updateType(reactionToUpdate, value) {\n        app.request({\n            method: 'PATCH',\n            url: app.forum.attribute('apiUrl') + '/reactions/' + reactionToUpdate.id(),\n            data: {\n                type: value,\n            },\n        });\n        this.reactions.some((reaction, i) => {\n            if (reaction.id() === reactionToUpdate.id()) {\n                reaction.type = m.prop(value);\n                return true;\n            }\n        });\n    }\n\n    deleteReaction(reactionToDelete) {\n        app.request({\n            method: 'DELETE',\n            url: app.forum.attribute('apiUrl') + '/reactions/' + reactionToDelete.id(),\n        });\n        this.reactions.some((reaction, i) => {\n            if (reaction.id() === reactionToDelete.id()) {\n                this.reactions.splice(i, 1);\n                return true;\n            }\n        });\n    }\n\n    onsubmit(e) {\n        // prevent the usual form submit behaviour\n        e.preventDefault();\n\n        // if the page is already saving, do nothing\n        if (this.loading) return;\n\n        // prevents multiple savings\n        this.loading = true;\n\n        // remove previous success popup\n        app.alerts.dismiss(this.successAlert);\n\n        const settings = {};\n\n        // gets all the values from the form\n        this.fields.forEach(key => (settings[this.addPrefix(key)] = this.values[key]()));\n\n        // actually saves everything in the database\n        saveSettings(settings)\n            .then(() => {\n                // on success, show popup\n                app.alerts.show(\n                    (this.successAlert = new Alert({\n                        type: 'success',\n                        children: app.translator.trans('core.admin.basics.saved_message'),\n                    }))\n                );\n            })\n            .catch(() => {})\n            .then(() => {\n                // return to the initial state and redraw the page\n                this.loading = false;\n                m.redraw();\n            });\n    }\n\n    isEnabled(name) {\n        const enabled = JSON.parse(app.data.settings.extensions_enabled);\n\n        return enabled.indexOf(name) !== -1;\n    }\n\n    /**\n     * @returns string\n     */\n    addPrefix(key) {\n        return this.settingsPrefix + '.' + key;\n    }\n}\n","import { extend } from 'flarum/extend';\nimport app from 'flarum/app';\nimport Forum from 'flarum/models/Forum';\nimport Model from 'flarum/Model';\nimport PermissionGrid from 'flarum/components/PermissionGrid';\n\nimport addSettingsPage from './addSettingsPage';\nimport Reaction from '../common/models/Reaction';\n\napp.initializers.add('reflar-reactions', () => {\n    app.store.models.reactions = Reaction;\n\n    Forum.prototype.reactions = Model.hasMany('reactions');\n\n    extend(PermissionGrid.prototype, 'replyItems', items => {\n        items.add('reactPosts', {\n            icon: 'far fa-thumbs-up',\n            label: app.translator.trans('reflar-reactions.admin.permissions.react_posts_label'),\n            permission: 'discussion.reactPosts',\n        });\n    });\n\n    addSettingsPage();\n});\n","import { extend } from 'flarum/extend';\nimport AdminNav from 'flarum/components/AdminNav';\nimport AdminLinkButton from 'flarum/components/AdminLinkButton';\nimport SettingsPage from './components/SettingsPage';\n\nexport default function() {\n    app.routes['reflar-reactions'] = {\n        path: '/reflar/reactions',\n        component: SettingsPage.component(),\n    };\n\n    app.extensionSettings['reflar-reactions'] = () => m.route(app.route('reflar-reactions'));\n\n    extend(AdminNav.prototype, 'items', items => {\n        items.add(\n            'reflar-reactions',\n            AdminLinkButton.component({\n                href: app.route('reflar-reactions'),\n                icon: 'fa fa-heart',\n                children: 'Reactions',\n                description: app.translator.trans('reflar-reactions.admin.nav.desc'),\n            })\n        );\n    });\n}\n","module.exports = flarum.core.compat['components/PermissionGrid'];","module.exports = flarum.core.compat['components/AdminNav'];","module.exports = flarum.core.compat['components/AdminLinkButton'];","module.exports = flarum.core.compat['components/Page'];","module.exports = flarum.core.compat['utils/saveSettings'];"],"sourceRoot":""}